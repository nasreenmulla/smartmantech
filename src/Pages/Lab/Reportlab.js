// import API from '../../Api';
// import logo from '../Popup/salamlogo.jpg';
// import React, { useState, useEffect} from 'react';

// const Reportlab = ({ id, visitId, doctor, onClose  }) => {
//     const [showReport, setShowReport] = useState(false);
//     const [reportContent, setReportContent] = useState('');
//     const [footerContent, setFooterContent] = useState('');
//     const [companyDetails, setCompanyDetails] = useState(null);

//     useEffect(() => {
//         fetchReportData();
//     }, []);

//     const fetchReportData = async () => {
//         try {
//             const comNo = localStorage.getItem('COM_NO');
//             if (!comNo) {
//                 console.error('com_no not found in local storage.');
//                 return;
//             }

//             const response = await API.get('/api/labreport', {
//                 params: { com_no: comNo, id, visitId }
//             });
//             const data = response.data;
//             const generatedReport = generateReport(data);
//             setReportContent(generatedReport);
//             setFooterContent(generateFooter());
//             setShowReport(true);
//             setCompanyDetails(data.companyDetails);
//             document.body.classList.add('modal-open');
//         } catch (error) {
//             console.error('Error fetching report data:', error);
//         }
//     };

//     const generateHeader = (companyDetails) => {
//         const detailsArray = Array.isArray(companyDetails) ? companyDetails : [companyDetails];
//         return `
//             <div class="report-header" style="display: flex; position: relative;">
//                 <div style="flex: 2;margin-left: 20px; display: flex; justify-content: space-between;">
//                     <div style="flex: 1; direction: ltr; text-align: left;">
//                         ${detailsArray.map(detail => `
//                             ${detail.Name1E || ''}<br>
//                             ${detail.Name2E || ''}<br>
//                             ${detail.Name3E || ''}<br>
//                             ${detail.Name4E || ''}<br>
//                             ${detail.Name5E || ''}
//                         `).join('')}
//                     </div>
//                     <div style="text-align: center; flex: 1;">
//                         <img src="${logo}" alt="Report Image" style="max-width: 40%; height: auto;"/>
//                         <div>${detailsArray.map(detail => detail.Name2E).join('<br>')}</div>
//                     </div>
//                     <div style="flex: 1;margin-right: 20px; direction: rtl; text-align: right;">
//                         ${detailsArray.map(detail => `
//                             ${detail.Name1A || ''}<br>
//                             ${detail.Name2A || ''}<br>
//                             ${detail.Name3A || ''}<br>
//                             ${detail.Name4A || ''}<br>
//                             ${detail.Name5A || ''}
//                         `).join('')}
//                     </div>
//                 </div>
//             </div>
//         `;
//     };

//     const generateFooter = () => {
//         const username = localStorage.getItem('username') || 'Unknown';
//         return `
//         <div style="margin-top: 20px; border-top: 1px solid darkgray; padding: 10px;">
//                      <p style="text-align: center; margin: 0; display: none;">
//                           <strong>Computer generated Invoice and requires no signature or stamp</strong><br>
//                          <span style="font-size: 0.9em;">فاتورة مولدة بواسطة الكمبيوتر ولا تحتاج إلى توقيع أو ختم</span>  
//                     </p>
//                  </div>
//                <div style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center;">
                

//                      <div style="flex: 1; text-align: center;">
//                          <div style="margin-bottom: 10px;">Date : 
//                              ${new Date().toLocaleString()} <!-- Current date and time -->
//                          </div>
//                      </div>

//                       <div style="flex: 1; text-align: center;">
//                          <div style="border: 1px solid black; padding: 10px; margin-bottom: 10px;">
//                              <div style="display: flex; justify-content: space-between;">
//                                  <strong>Generated By:</strong>
//                                  <span>${username}</span>
//                              </div>
//                              <hr style="border: 0; border-top: 1px solid gray; margin: 5px 0;">
//                              <div style="display: flex; justify-content: space-between;">
//                                  <strong>Sign:</strong>
//                                  <span>${doctor}</span>
//                              </div>
//                          </div>
//                      </div>
//                  </div>
//         `;
//     };

//     const generateReport = (data) => {
//         const customer = data.customerData;
//         const { companyDetails, clnclabData } = data;

//         const headerContent = generateHeader(companyDetails); // Generate header content
//         const footercontent=generateFooter();
//         // Group tests by description
//         const groupedLabData = clnclabData.reduce((acc, detail) => {
//             const description = detail.DESC_E || 'No Description';
//             if (!acc[description]) {
//                 acc[description] = [];
//             }
//             acc[description].push(detail);
//             return acc;
//         }, {});
//         const dob = new Date(customer[3]); // Assuming DOB is at index 3
//                  const age = new Date().getFullYear() - dob.getFullYear() - (new Date() < new Date(dob.getFullYear(), dob.getMonth(), dob.getDate()) ? 1 : 0);
        
//                 // Format customer information
//                  const registrationDate = clnclabData.length > 0 ? new Date(clnclabData[0].CREATED_DAT).toLocaleDateString('en-US') : 'N/A';
//                 const cid = customer[2]; 
//         const customerInfo = `
//         <div style="margin-top: 20px; border: 1px solid gray; padding: 10px;">
//             <div style="display: flex; align-items: center;">
//                 <div style="flex: 1; display: flex; justify-content: space-between; align-items: center;">
//                     <div style="text-align: left;">
//                         <strong>File No:</strong>
//                     </div>
//                     <div style="text-align: center; display: flex; align-items: center;">
//                         <div style="width: 100px;">
//                             <img src="https://barcode.tec-it.com/barcode.ashx?data=${customer[0]}&code=Code128&dpi=96" alt="Barcode" style="width: 100%; height: auto;" />
//                         </div>
//                     </div>
//                     <div style="text-align: right;">
//                         <strong>Reg Date:</strong> ${registrationDate}
//                     </div>
//                 </div>
//             </div>
//             <div style="margin-top: 10px; display: flex; justify-content: space-between;">
//                 <div style="flex: 1;">
//                     <strong>Name:</strong> ${customer[1]}<br>
//                     <strong>Mobile:</strong> ${customer[5]}<br>
//                     <strong>Gender:</strong> ${customer[7]}<br>
//                 </div>
//                 <div style="flex: 1;">
//                     <strong>DOB:</strong> ${dob.toLocaleDateString('en-US')}<br>
//                     <strong>Age:</strong> ${age}<br>
//                     <strong>Address:</strong> ${customer[4] || 'N/A'}<br>
//                     <strong>QID:</strong> ${cid || 'N/A'}<br>
//                 </div>
//                 <div style="flex: 1;">
//                     <strong>Insurance:</strong> ${customer[8] || 'N/A'}<br>
//                     <strong>Nationality:</strong> ${customer[6]}<br>
//                 </div>
//             </div>
//         </div>
//     `;// Keep your existing customer info code here

//         const labDetailsTables = Object.entries(groupedLabData).map(([description, tests]) => {
//             const labDetails = tests.map(detail => `
//                 <tr>
//                     <td style="padding: 8px;">${detail.TEST_HEADER ? `<strong style="color: #555;">${detail.TEST_HEADER}</strong><br>` : ''}${detail.TEST_NAME}</td>
//                     <td style="padding: 8px;">${detail.RESULT || 'N/A'}</td>
//                     <td style="padding: 8px;">${detail.REF_RANGE || 'N/A'}</td>
//                 </tr>
//             `).join('');

//             return `
//                 <div style="margin-top: 20px;">
//                     <h4>${description}</h4>
//                     <table style="width: 100%; border-collapse: collapse;">
//                         <thead>
//                             <tr>
//                                 <th style="border: 1px solid #ddd; padding: 8px;">Investigation</th>
//                                 <th style="border: 1px solid #ddd; padding: 8px;">Result</th>
//                                 <th style="border: 1px solid #ddd; padding: 8px;">Reference Range</th>
//                             </tr>
//                         </thead>
//                         <tbody>
//                             ${labDetails}
//                         </tbody>
//                     </table>
//                 </div>
//             `;
//         }).join('');

//         return `
//             <div class="report">
//                 ${headerContent} <!-- Include the header -->
//                 ${customerInfo}
//                 ${labDetailsTables}
//                 ${footercontent} <!-- Include the footer -->
//             </div>
//         `;
//     };
   
    
//     const handlePrint = () => {
//         const printWindow = window.open('', '_blank');
//         printWindow.document.open();
//         printWindow.document.write(`
//             <html>
//                 <head>
//                     <title>Print Report</title>
//                     <style>
//                         body {
//                             font-family: Arial, sans-serif;
//                             margin: 0;
//                         }
//                         .report {
//                             padding: 20px;
//                             page-break-after: always;
//                         }
//                         .report-header {
//                             position: fixed;
//                             top: 0;
//                             left: 0;
//                             right: 0;
//                             background: white;
//                             z-index: 1000;
//                             padding: 10px 0;
//                         }
//                         .report-footer {
//                           text-align: center;
//                         padding: 10px 0;
//                         position: absolute; /* Ensures it stays at the bottom */
//                         bottom: 0;
//                         left: 0;
//                         right: 0;
//                         background: white;
//                         }
//                         @media print {
//                             body {
//                                 margin: 0;
//                             }
//                             @page {
                            
//                             }
//                         }
//                     </style>
//                 </head>
//                 <body>
//                     <div class="report-header">
//                         ${companyDetails ? generateHeader(companyDetails) : ''}
//                     </div>
//                     <div id="print-content">
//                         ${reportContent}
//                     </div>
//                     <script>
//                         window.onload = function() {
//                             const reportContent = document.getElementById('print-content');
//                             const pages = Math.ceil(reportContent.scrollHeight / window.innerHeight);
                            
//                             // Create footer element
//                             const footer = document.createElement('div');
//                             footer.className = 'report-footer';
//                             footer.innerHTML = \`${footerContent}\`; // Add footer content here
                            
//                             // Append footer only if there's more than one page or if only one page
//                             if (pages > 1) {
//                                 // Only show the footer on the last page
//                                const lastPage = document.createElement('div');
//                             lastPage.style.position = 'relative';
//                             lastPage.style.minHeight = '100vh'; // Full height for the last page
//                             lastPage.appendChild(footer);
//                             document.body.appendChild(lastPage);
//                             } else {
//                                 // If content fits in one page, append footer directly
//                                 document.body.appendChild(footer);
//                             }
    
//                             window.print();
//                             window.close();
//                         };
//                     </script>
//                 </body>
//             </html>
//         `);
//         printWindow.document.close();
//     };
    
   
//     const handleCloseReport = () => {
//         setShowReport(false);
//         document.body.classList.remove('modal-open');
//         if (onClose) {
//             onClose(); // Notify the parent component
//         }
//     };

//     return (
//         <div className="report-generator-page">
//             {showReport && (
//                 <div className="modal-overlay">
//                     <div className="report-modal">
//                         <div className="report-modal-content">
//                             <span className="close" onClick={handleCloseReport}>&times;</span>
//                             <div className="report-content">
//                                 <div dangerouslySetInnerHTML={{ __html: reportContent }} />
//                             </div>
//                             <div className="report-options">
//                                 <button onClick={handlePrint}>Print</button>
//                             </div>
//                         </div>
//                     </div>
//                 </div>
//             )}
//         </div>
//     );
// };

// export default Reportlab;
import API from '../../Api';
import logo from '../Popup/salamlogo.jpg';
import React, { useState, useEffect} from 'react';

const Reportlab = ({ id, visitId, doctor, onClose  }) => {
    const [showReport, setShowReport] = useState(false);
    const [reportContent, setReportContent] = useState('');
   

    useEffect(() => {
        fetchReportData();
    }, []);

    const fetchReportData = async () => {
        try {
            const comNo = localStorage.getItem('COM_NO');
            if (!comNo) {
                console.error('com_no not found in local storage.');
                return;
            }

            const response = await API.get('/api/labreport', {
                params: { com_no: comNo, id, visitId }
            });
            const data = response.data;
            console.log('fethed data',data)
            const generatedReport = generateReport(data);
            setReportContent(generatedReport);
            
            setShowReport(true);
           
            document.body.classList.add('modal-open');
        } catch (error) {
            console.error('Error fetching report data:', error);
        }
    };

    const generateHeader = (companyDetails) => {
        const detailsArray = Array.isArray(companyDetails) ? companyDetails : [companyDetails];
        return `
            <div class="report-header" style="display: flex; position: relative;">
                <div style="flex: 2; display: flex; justify-content: space-between;">
                    <div style="flex: 1; direction: ltr; text-align: left;">
                        ${detailsArray.map(detail => `
                            ${detail.Name1E || ''}<br>
                            ${detail.Name2E || ''}<br>
                            ${detail.Name3E || ''}<br>
                            ${detail.Name4E || ''}<br>
                            ${detail.Name5E || ''}
                        `).join('')}
                    </div>
                    <div style="text-align: center; flex: 1;">
                        <img src="${logo}" alt="Report Image" style="max-width: 40%; height: auto;"/>
                        <div>${detailsArray.map(detail => detail.Name2E).join('<br>')}</div>
                    </div>
                    <div style="flex: 1; direction: rtl; text-align: right;">
                        ${detailsArray.map(detail => `
                            ${detail.Name1A || ''}<br>
                            ${detail.Name2A || ''}<br>
                            ${detail.Name3A || ''}<br>
                            ${detail.Name4A || ''}<br>
                            ${detail.Name5A || ''}
                        `).join('')}
                    </div>
                </div>
            </div>
        `;
    };

    const generateFooter = () => {
        const username = localStorage.getItem('username') || 'Unknown';
        return `
        <div style="margin-top: 20px; border-top: 1px solid darkgray; padding: 10px;">
                     <p style="text-align: center; margin: 0; display: none;">
                          <strong>Computer generated Invoice and requires no signature or stamp</strong><br>
                         <span style="font-size: 0.9em;">فاتورة مولدة بواسطة الكمبيوتر ولا تحتاج إلى توقيع أو ختم</span>  
                    </p>
                 </div>
               <div style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center;">
                

                     <div style="flex: 1; text-align: center;">
                         <div style="margin-bottom: 10px;"> 
                             ${new Date().toLocaleString()} <!-- Current date and time -->
                         </div>
                     </div>

                      <div style="flex: 1; text-align: center;">
                         <div style="border: 1px solid black; padding: 10px; margin-bottom: 10px;">
                             <div style="display: flex; justify-content: space-between;">
                                 <strong>Generated By:</strong>
                                 <span>${username}</span>
                             </div>
                             <hr style="border: 0; border-top: 1px solid gray; margin: 5px 0;">
                             <div style="display: flex; justify-content: space-between;">
                                 <strong>Sign:</strong>
                                 <span>${doctor}</span>
                             </div>
                         </div>
                     </div>
                 </div>
        `;
    };

    const generateReport = (data) => {
        const customer = data.customerData;
        const { companyDetails, clnclabData } = data;

        const headerContent = generateHeader(companyDetails); // Generate header content
        const footercontent=generateFooter();
        // Group tests by description
        const groupedLabData = clnclabData.reduce((acc, detail) => {
            const description = detail.DESC_E || 'No Description';
            if (!acc[description]) {
                acc[description] = [];
            }
            acc[description].push(detail);
            return acc;
        }, {});
        const dob = new Date(customer[3]); // Assuming DOB is at index 3
                 const age = new Date().getFullYear() - dob.getFullYear() - (new Date() < new Date(dob.getFullYear(), dob.getMonth(), dob.getDate()) ? 1 : 0);
        
                // Format customer information
                 const registrationDate = clnclabData.length > 0 ? new Date(clnclabData[0].CREATED_DAT).toLocaleDateString('en-US') : 'N/A';
                const cid = customer[2]; 
        const customerInfo = `
        <div style="margin-top: 20px; border: 1px solid gray; padding: 10px;">
            <div style="display: flex; align-items: center;">
                <div style="flex: 1; display: flex; justify-content: space-between; align-items: center;">
                    <div style="text-align: left;">
                        <strong>File No:</strong>
                    </div>
                    <div style="text-align: center; display: flex; align-items: center;">
                        <div style="width: 100px;">
                            <img src="https://barcode.tec-it.com/barcode.ashx?data=${customer[0]}&code=Code128&dpi=96" alt="Barcode" style="width: 100%; height: auto;" />
                        </div>
                    </div>
                    <div style="text-align: right;">
                        <strong>Reg Date:</strong> ${registrationDate}
                    </div>
                </div>
            </div>
            <div style="margin-top: 10px; display: flex; justify-content: space-between;">
                <div style="flex: 1;">
                    <strong>Name:</strong> ${customer[1]}<br>
                    <strong>Mobile:</strong> ${customer[5]}<br>
                    <strong>Gender:</strong> ${customer[7]}<br>
                </div>
                <div style="flex: 1;">
                    <strong>DOB:</strong> ${dob.toLocaleDateString('en-US')}<br>
                    <strong>Age:</strong> ${age}<br>
                    <strong>Address:</strong> ${customer[4] || 'N/A'}<br>
                    <strong>QID:</strong> ${cid || 'N/A'}<br>
                </div>
                <div style="flex: 1;">
                    <strong>Insurance:</strong> ${customer[8] || 'N/A'}<br>
                    <strong>Nationality:</strong> ${customer[6]}<br>
                </div>
            </div>
        </div>
    `;// Keep your existing customer info code here

        const labDetailsTables = Object.entries(groupedLabData).map(([description, tests]) => {
            const labDetails = tests.map(detail => `
                <tr>
                    <td style="padding: 8px;">${detail.TEST_HEADER ? `<strong style="color: #555;">${detail.TEST_HEADER}</strong><br>` : ''}${detail.TEST_NAME}</td>
                    <td style="padding: 8px;">${detail.RESULT || 'N/A'}</td>
                    <td style="padding: 8px;">${detail.REF_RANGE || 'N/A'}</td>
                </tr>
            `).join('');

            return `
                <div style="margin-top: 20px;">
                    <h4>${description}</h4>
                    <table style="width: 100%; border-collapse: collapse;">
                        <thead>
                            <tr>
                                <th style="border: 1px solid #ddd; padding: 8px;">Investigation</th>
                                <th style="border: 1px solid #ddd; padding: 8px;">Result</th>
                                <th style="border: 1px solid #ddd; padding: 8px;">Reference Range</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${labDetails}
                        </tbody>
                    </table>
                </div>
            `;
        }).join('');

        return `
            <div class="report">
                ${headerContent} <!-- Include the header -->
                ${customerInfo}
                ${labDetailsTables}
                ${footercontent} <!-- Include the footer -->
            </div>
        `;
    };
   
    
   
    const handlePrint = () => {
        const printWindow = window.open('', '_blank');
        printWindow.document.open();
        printWindow.document.write(`
            <html>
                <head>
                    <title>Print Report</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 0; }
                        .report { page-break-after: always; }
                        @media print {
                            .report { page-break-after: always; }
                            .report-header, .report-footer {
                                position: fixed;
                                left: 0;
                                right: 0;
                                height: 100px; /* Height of header/footer */
                                padding: 10px;
                                background: white; /* Background color */
                                z-index: 1000;
                            }
                            .report-header {
                                top: 0;
                            }
                            .report-footer {
                                bottom: 0;
                            }
                        }
                    </style>
                </head>
                <body>
                    ${reportContent}
                </body>
            </html>
        `);
        printWindow.document.close();
        printWindow.print();
    };

   
    const handleCloseReport = () => {
        setShowReport(false);
        document.body.classList.remove('modal-open');
        if (onClose) {
            onClose(); // Notify the parent component
        }
    };

    return (
        <div className="report-generator-page">
            {showReport && (
                <div className="modal-overlay">
                    <div className="report-modal">
                        <div className="report-modal-content">
                            <span className="close" onClick={handleCloseReport}>&times;</span>
                            <div className="report-content">
                                <div dangerouslySetInnerHTML={{ __html: reportContent }} />
                            </div>
                            <div className="report-options">
                                <button onClick={handlePrint}>Print</button>
                            </div>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Reportlab;






